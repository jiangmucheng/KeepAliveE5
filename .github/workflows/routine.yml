name: Invoke API

on:
  schedule:
    - cron: '32 */8 * * *'
  workflow_dispatch:

jobs:
  Invoke:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: master
          token: ${{ secrets.PAT }}

      - name: Pull upstream
        run: bash wrapper.sh pull sync
      
      - name: Set python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install python dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Test Api
        env:
          PASSWD: ${{ secrets.PASSWD }}
        run: bash wrapper.sh invoke

      - name: Commit and push
        run: bash wrapper.sh push "update app config"
